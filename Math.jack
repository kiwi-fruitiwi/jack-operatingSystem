// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {

    /** Initializes the library. */
    function void init() {
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
    }

    /** Returns the product of x and y. 
        When a Jack compiler detects the multiplication operator '*' in the 
        program's code, it handles it by invoking this method. In other words,
        the Jack expressions x*y and multiply(x,y) return the same value.
      */
    function int multiply(int x, int y) {
        /* multiplication follows the bit shift addition algorithm:
            add shifted versions of the larger multiplicand whenever bits of
            the smaller multiplicand equal 1


            multiply(x, y):
                determine which is smaller, then assign that to y, other to x?

                sum = 0
                shiftedX = x
                for i=0, w-1 do:
                    if the iᵗʰ bit of y is 1:
                        sum += shiftedX
                    shiftedX *=2
                return sum
        */


    }

    /** Returns the integer part of x/y.
        When a Jack compiler detects the multiplication operator '/' in the 
        program's code, it handles it by invoking this method. In other words,
        the Jack expressions x/y and divide(x,y) return the same value.
      */
    function int divide(int x, int y) {
    }

    /** Returns the integer part of the square root of x. 




    */
    function int sqrt(int x) {
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
    }
}
